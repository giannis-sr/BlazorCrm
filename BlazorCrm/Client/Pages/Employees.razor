@page "/Employee"
@inject NavigationManager NavigationManager
@inject HttpClient Http
<h3>Employees</h3>

<SfGrid DataSource="GridData" AllowFiltering="true" AllowPaging="true" Toolbar="@(new List<string>() { "Search"})">

    <GridColumns>
        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.CheckBox"></GridFilterSettings>
        <GridColumn Width="60">
            <Template>
                @{
                    var employee = context as Employee;
                    <SfButton CssClass="e-inherit" IconCss="e-icons e-edit"
                              OnClick="@(() => EditEmployee(employee!.Id))"></SfButton>

                }
            </Template>
          
        </GridColumn>
            <GridColumn Field="FirstName" HeaderText="First Name"></GridColumn>
            <GridColumn Field="LastName" HeaderText="Last Name"></GridColumn>
            <GridColumn Field="NickName" HeaderText="Nick Name"></GridColumn>
            <GridColumn Field="Place" HeaderText="Place"></GridColumn>
            <GridColumn Field="DateOfBirth" HeaderText="Date of Birth" Format="yyyy-MM-dd"></GridColumn>
    </GridColumns>
    
</SfGrid>
@code {
    public List<Employee> GridData { get; set; } = new List<Employee>();

    protected override async Task OnInitializedAsync()
    {
        var result = await Http.GetFromJsonAsync<List<Employee>>("api/employees");
        if(result is not null)
        {
            GridData = result;
        }
    }

    void EditEmployee(int id)
    {
        NavigationManager.NavigateTo($"employees/edit/{id}");
    }

    void CreateEmployee()
    {
        NavigationManager.NavigateTo($"employees/new");
    }
}
